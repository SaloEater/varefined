--[[
Monkey patch for axr_companions.script to use with Voiced Actor Refined mod
adding logic to play voiced commands in squads by varoius conditions including muffling and language checks from AGDD_voiced_actor.script.
Based on: 
Voiced Actor Expanded by LuxoSVK https://www.moddb.com/mods/stalker-anomaly/addons/voiced-actor-expanded
Voiced Actor by DesmanMetzger https://www.moddb.com/addons/voiced-actor-30-russian-voice
GAMMA Voiced Actor edits by Grok

freely distribute and change as you like
by Werwolf969
--]] if axr_companions then

    function axr_companions.squad_close() -- SQUAD IN CLOSE DISTANCE CHECKER (UP TO 12m)
        local i, a = next(axr_companions.companion_squads, nil)
        if not (a) or not db.actor:alive() then
            return false
        elseif alife_object(a:commander_id()).position:distance_to(db.actor:position()) <= 12 then
            return true
        else
            return false
        end
    end

    function axr_companions.squad_near() -- SQUAD IN NEAR DISTANCE CHECKER (FROM 12m TO 24m)
        local i, b = next(axr_companions.companion_squads, nil)
        if not (b) or not db.actor:alive() then
            return false
        elseif alife_object(b:commander_id()).position:distance_to(db.actor:position()) > 12 and
            alife_object(b:commander_id()).position:distance_to(db.actor:position()) <= 24 then
            return true
        else
            return false
        end
    end

    function axr_companions.squad_mid() -- SQUAD IN MID DISTANCE CHECKER (FROM 24m TO 40m)
        local i, c = next(axr_companions.companion_squads, nil)
        if not (c) or not db.actor:alive() then
            return false
        elseif alife_object(c:commander_id()).position:distance_to(db.actor:position()) > 24 and
            alife_object(c:commander_id()).position:distance_to(db.actor:position()) <= 40 then
            return true
        else
            return false
        end
    end

    function axr_companions.squad_far() -- SQUAD IN FAR DISTANCE CHECKER (FROM 40m TO 60m)
        local i, d = next(axr_companions.companion_squads, nil)
        if not (d) or not db.actor:alive() then
            return false
        elseif alife_object(d:commander_id()).position:distance_to(db.actor:position()) > 40 and
            alife_object(d:commander_id()).position:distance_to(db.actor:position()) <= 60 then
            return true
        else
            return false
        end
    end

    function axr_companions.squad_too_far() -- SQUAD OUTSIDE OF HEARING DISTANCE CHECKER (MORE THAN 60m)
        local i, e = next(axr_companions.companion_squads, nil)
        if not (e) or not db.actor:alive() then
            return false
        elseif alife_object(e:commander_id()).position:distance_to(db.actor:position()) > 60 then
            return true
        else
            return false
        end
    end

    local command_cooldown = 0
    local file_to_play = nil
    local get_config = varefined_mcm.get_config
    local mcm_sound_volume = get_config("shouts_volume") -- gets the volume value from MCM

    function axr_companions.axr_companions.actors_command(file, sound_volume, cooldown, requires_squad_close, requires_squad_near, requires_squad_mid,
        requires_squad_far, requires_squad_too_far) -- THIS WILL PICK CERTAIN SOUND ,DEPENDS ON SQUAD DISTANCE AND PLAYS IT. Argument "sound_volume" is overwriten by default from MCM shouts volume slider.
        if not db.actor then
            return
        end
        if requires_squad_close == true and axr_companions.squad_close() == false then
            return
        end
        if requires_squad_near == true and axr_companions.squad_near() == false then
            return
        end
        if requires_squad_mid == true and axr_companions.squad_mid() == false then
            return
        end
        if requires_squad_far == true and axr_companions.squad_far() == false then
            return
        end
        if requires_squad_too_far == true and axr_companions.squad_too_far() == false then
            return
        end

        if file_to_play then
            file_to_play:stop()
        end

        file_to_play = sound_object(file)
        file_to_play:play(db.actor, 0, sound_object.s2d)
        if mcm_sound_volume then
            file_to_play.volume = mcm_sound_volume * sound_volume
        else
            file_to_play.volume = sound_volume -- sets how loud the sound should be
        end

        command_cooldown = time_global() + cooldown
    end

    function axr_companions.sound_checking() -- SMALL FUNCTION THAT CHECKS IF COOLDOWN OF SOUNDS CALLED BY THIS SCRIPT EXPIRED OR NOT YET ,THIS FUNCTION IS FOR USE FROM AGDD_voiced_actor.script TO OBEY COMMANDS COOLDOWNS SO IT WILL GUARANTEE THAT COMMANDS WILL HAVE HIGHEST PRIORITY AND WILL BE NOT INTERRUPTED BY OTHER SOUNDS
        if time_global() < command_cooldown then
            return true
        else
            return false
        end
    end

    function axr_companions.sound_checking_stop() -- SMALL FUNCTION THAT STOPS ANY SOUND CALLED BY THIS SCRIPT ,THIS FUNCTION IS FOR USE FROM AGDD_voiced_actor.script AND ui_addon_companion_quick_menu.script (IF COMPANION MENU OPENS OR IF ACTOR DIE AND COMMAND IS PLAYED IN THAT MOMENT ,IT WILL STOP COMMAND SOUND RIGHT THERE)
        if file_to_play then
            file_to_play:stop()
        end
    end

    local lang = ""
    local muffle = ""

    function lang_muffle_init()
        if lang or muffle then
            lang = AGDD_voiced_actor.get_actor_lang()
            muffle = AGDD_voiced_actor.get_muffle_status()
        end
    end
    
    function axr_companions.set_companion_hide_in_cover(npc) -- EDITED FUNCTION (MOVE TO POINT COMMAND)
        npc:give_info_portion("npcx_beh_hide_in_cover")
        npc:disable_info_portion("npcx_beh_wait")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check() -- EXTERNAL SOUND CHECK ,IT WILL TURN OFF ANY SOUND CALLED FROM AGDD_voiced_actor.script
            if not (AGDD_voiced_actor.is_actor_in_combat()) or not (AGDD_voiced_actor.outer_combat_checker()) then -- IF ACTOR IS NOT IN COMBAT IT WILL PLAYS ONE OF THE FOLLOWING COMMANDS
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComClose", 1.0, 2500, true, false, false, false, false) -- PLAYS COMMAND FOR SQUAD IN CLOSE DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComNear", 1.0, 2500, false, true, false, false, false) -- PLAYS COMMAND FOR SQUAD IN NEAR DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComMid", 1.0, 2500, false, false, true, false, false) -- PLAYS COMMAND FOR SQUAD IN MID DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComFar", 1.0, 2500, false, false, false, true, false) -- PLAYS COMMAND FOR SQUAD IN FAR DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_Radio", 1.0, 2500, false, false, false, false, true) -- PLAYS COMMAND FOR SQUAD OUT OF HEARING DISTANCE
            else -- IF ACTOR IS IN COMBAT IT WILL PLAYS ONE OF THE FOLLOWING COMMANDS
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComClose_AIC", 1.0, 2500, true, false, false, false, false) -- PLAYS COMMAND FOR SQUAD IN CLOSE DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComNear_AIC", 1.0, 2500, false, true, false, false, false) -- PLAYS COMMAND FOR SQUAD IN NEAR DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComMid_AIC", 1.0, 2500, false, false, true, false, false) -- PLAYS COMMAND FOR SQUAD IN MID DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComFar_AIC", 1.0, 2500, false, false, false, true, false) -- PLAYS COMMAND FOR SQUAD IN FAR DISTANCE
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\MoveToPoint\\" .. muffle ..
                                   "MoveToPoint_ComTooFar_AIC", 1.0, 2500, false, false, false, false, true) -- PLAYS COMMAND FOR SQUAD OUT OF HEARING DISTANCE
            end
        end -- filters disabled companion commands shouts from MCM
    end
    
    function axr_companions.set_companion_to_wait_state(npc) -- EDITED FUNCTION (WAIT COMMAND)
        npc:give_info_portion("npcx_beh_wait")
        save_var(npc, "fight_from_point", npc:level_vertex_id())
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check() -- SAME AS ABOVE
            if not (AGDD_voiced_actor.is_actor_in_combat()) or not (AGDD_voiced_actor.outer_combat_checker()) then -- SAME AS ABOVE
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComClose", 1.0,
                    3500, true, false, false, false, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComNear", 1.0,
                    3500, false, true, false, false, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComMid", 1.0, 3500,
                    false, false, true, false, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComFar", 1.0, 3500,
                    false, false, false, true, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_Radio", 1.0, 3500,
                    false, false, false, false, true) -- SAME AS ABOVE BUT FOR WAIT COMMAND
            else -- SAME AS ABOVE
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComClose_AIC", 1.0,
                    3500, true, false, false, false, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComNear_AIC", 1.0,
                    3500, false, true, false, false, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComMid_AIC", 1.0,
                    3500, false, false, true, false, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComFar_AIC", 1.0,
                    3500, false, false, false, true, false) -- SAME AS ABOVE BUT FOR WAIT COMMAND
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Wait\\" .. muffle .. "Wait_ComTooFar_AIC",
                    1.0, 3500, false, false, false, false, true) -- SAME AS ABOVE BUT FOR WAIT COMMAND
            end
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_patrol_state(npc) -- EDITED FUNCTION (PATROL)
        npc:give_info_portion("npcx_beh_patrol_mode")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Patrol\\" .. muffle .. "StartPatrolling", 1.0,
                1700, true, false, false, false, false) -- START PATROLLING COMMAND
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_follow_state(npc) -- EDITED FUNCTION (FOLLOW COMMAND)
        npc:disable_info_portion("npcx_beh_wait")
        npc:disable_info_portion("npcx_beh_hide_in_cover")
        npc:disable_info_portion("npcx_beh_patrol_mode")
        save_var(npc, "fight_from_point", nil)
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            if not (AGDD_voiced_actor.is_actor_in_combat()) or not (AGDD_voiced_actor.outer_combat_checker()) then
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComClose", 1.0,
                    3200, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComNear", 1.0,
                    3200, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComMid", 1.0,
                    3200, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComFar", 1.0,
                    3200, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_Radio", 1.0,
                    3200, false, false, false, false, true)
            else
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComClose_AIC",
                    1.0, 3200, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComNear_AIC",
                    1.0, 3200, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComMid_AIC",
                    1.0, 3200, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComFar_AIC",
                    1.0, 3200, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Follow\\" .. muffle .. "Follow_ComTooFar_AIC",
                    1.0, 3200, false, false, false, false, true)
            end
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_attack_state(npc) -- EDITED FUNCTION (FIRE AT WILL COMMAND)
        npc:disable_info_portion("npcx_beh_ignore_combat")
        npc:disable_info_portion("npcx_beh_ignore_actor_enemies")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            if not (AGDD_voiced_actor.is_actor_in_combat()) or not (AGDD_voiced_actor.outer_combat_checker()) then
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle ..
                                   "FireAtWill_ComClose", 1.0, 3000, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle ..
                                   "FireAtWill_ComNear", 1.0, 3000, false, true, false, false, false)
                axr_companions.actors_command(
                    "characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle .. "FireAtWill_ComMid", 1.0,
                    3000, false, false, true, false, false)
                axr_companions.actors_command(
                    "characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle .. "FireAtWill_ComFar", 1.0,
                    3000, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle .. "FireAtWill_Radio",
                    1.0, 3000, false, false, false, false, true)
            else
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle ..
                                   "FireAtWill_ComClose_AIC", 1.0, 3000, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle ..
                                   "FireAtWill_ComNear_AIC", 1.0, 3000, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle ..
                                   "FireAtWill_ComMid_AIC", 1.0, 3000, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle ..
                                   "FireAtWill_ComFar_AIC", 1.0, 3000, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\FireAtWill\\" .. muffle ..
                                   "FireAtWill_ComTooFar_AIC", 1.0, 3000, false, false, false, false, true)
            end
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_ignore_combat_state(npc) -- EDITED FUNCTION (IGNORE COMBAT COMMAND)
        npc:give_info_portion("npcx_beh_ignore_combat")
        npc:give_info_portion("npcx_beh_ignore_actor_enemies")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            if not (AGDD_voiced_actor.is_actor_in_combat()) or not (AGDD_voiced_actor.outer_combat_checker()) then
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComClose", 1.0, 2500, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComNear", 1.0, 2500, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComMid", 1.0, 2500, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComFar", 1.0, 2500, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_Radio", 1.0, 2500, false, false, false, false, true)
            else
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComClose_AIC", 1.0, 2500, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComNear_AIC", 1.0, 2500, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComMid_AIC", 1.0, 2500, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComFar_AIC", 1.0, 2500, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombat\\" .. muffle ..
                                   "IgnoreCombat_ComTooFar_AIC", 1.0, 2500, false, false, false, false, true)
            end
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_attack_only_actor_combat_enemy_state(npc) -- EDITED FUNCTION (IGNORE COMBAT BUT HELP ME COMMAND)
        npc:give_info_portion("npcx_beh_ignore_combat")
        npc:disable_info_portion("npcx_beh_ignore_actor_enemies")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\IgnoreCombatButHelpMe\\" .. muffle ..
                               "IgnoreCombatButHelpMe", 1.0, 1500, true, false, false, false, false)
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_stealth_substate(npc) -- EDITED FUNCTION (STEALTH COMMAND)
        npc:give_info_portion("npcx_beh_substate_stealth")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Stealth\\" .. muffle .. "Stealth_ComClose", 1.0,
                2300, true, false, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Stealth\\" .. muffle .. "Stealth_ComNear", 1.0,
                2300, false, true, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Stealth\\" .. muffle .. "Stealth_ComMid", 1.0,
                2300, false, false, true, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Stealth\\" .. muffle .. "Stealth_ComFar", 1.0,
                2300, false, false, false, true, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Stealth\\" .. muffle .. "Stealth_Radio", 1.0,
                2300, false, false, false, false, true)
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_default_substate(npc) -- EDITED FUNCTION (STOP STEALTH COMMAND)
        npc:disable_info_portion("npcx_beh_substate_stealth")
        npc:disable_info_portion("npcx_beh_substate_relax")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command(
                "characters_voice\\commands" .. lang .. "\\StopStealth\\" .. muffle .. "StopStealth_ComClose", 1.0,
                1700, true, false, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StopStealth\\" .. muffle .. "StopStealth_ComNear",
                1.0, 1700, false, true, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StopStealth\\" .. muffle .. "StopStealth_ComMid",
                1.0, 1700, false, false, true, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StopStealth\\" .. muffle .. "StopStealth_ComFar",
                1.0, 1700, false, false, false, true, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StopStealth\\" .. muffle .. "StopStealth_Radio",
                1.0, 1700, false, false, false, false, true)
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_loot_items_and_corpses(npc) -- EDITED FUNCTION (LOOT COMMAND)
        npc:give_info_portion("npcx_beh_gather_items")
        npc:give_info_portion("npcx_beh_loot_corpses")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComClose", 1.0, 2200,
                true, false, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComNear", 1.0, 2200,
                false, true, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComMid", 1.0, 2200,
                false, false, true, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComFar", 1.0, 2200,
                false, false, false, true, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_Radio", 1.0, 2200,
                false, false, false, false, true)
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_loot_items_only(npc) -- EDITED FUNCTION (LOOT ONLY ITEMS COMMAND)
        npc:give_info_portion("npcx_beh_gather_items")
        npc:disable_info_portion("npcx_beh_loot_corpses")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComClose", 1.0, 2200,
                true, false, false, false, false)
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_loot_corpses_only(npc) -- EDITED FUNCTION (LOOT ONLY BODYS COMMAND)
        npc:disable_info_portion("npcx_beh_gather_items")
        npc:give_info_portion("npcx_beh_loot_corpses")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComNear", 1.0, 2200,
                true, false, false, false, false)
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_loot_nothing(npc) -- EDITED FUNCTION (DONT LOOT COMMAND)
        npc:disable_info_portion("npcx_beh_gather_items")
        npc:disable_info_portion("npcx_beh_loot_corpses")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\DontLoot\\" .. muffle .. "DontLoot_ComClose", 1.0,
                3000, true, false, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\DontLoot\\" .. muffle .. "DontLoot_ComNear", 1.0,
                3000, false, true, false, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\DontLoot\\" .. muffle .. "DontLoot_ComMid", 1.0,
                3000, false, false, true, false, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\DontLoot\\" .. muffle .. "DontLoot_ComFar", 1.0,
                3000, false, false, false, true, false)
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\DontLoot\\" .. muffle .. "DontLoot_Radio", 1.0,
                3000, false, false, false, false, true)
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_stay_close(npc) -- EDITED FUNCTION (STAY CLOSE COMMAND)
        npc:disable_info_portion("npcx_beh_distance_far")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            if not (AGDD_voiced_actor.is_actor_in_combat()) or not (AGDD_voiced_actor.outer_combat_checker()) then
                lang_muffle_init()
                axr_companions.actors_command(
                    "characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle .. "StayClose_ComClose", 1.0,
                    3000, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle .. "StayClose_ComNear",
                    1.0, 3000, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle .. "StayClose_ComMid",
                    1.0, 3000, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle .. "StayClose_ComFar",
                    1.0, 3000, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle .. "StayClose_Radio",
                    1.0, 3000, false, false, false, false, true)
            else
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle ..
                                   "StayClose_ComClose_AIC", 1.0, 3000, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle ..
                                   "StayClose_ComNear_AIC", 1.0, 3000, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle ..
                                   "StayClose_ComMid_AIC", 1.0, 3000, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle ..
                                   "StayClose_ComFar_AIC", 1.0, 3000, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle ..
                                   "StayClose_ComTooFar_AIC", 1.0, 3000, false, false, false, false, true)
            end
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.set_companion_to_stay_far(npc) -- EDITED FUNCTION (STAY FAR COMMAND)
        npc:give_info_portion("npcx_beh_distance_far")
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            if not (AGDD_voiced_actor.is_actor_in_combat()) or not (AGDD_voiced_actor.outer_combat_checker()) then
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComClose",
                    1.0, 3300, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComNear",
                    1.0, 3300, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComMid", 1.0,
                    3300, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComFar", 1.0,
                    3300, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_Radio", 1.0,
                    3300, false, false, false, false, true)
            else
                lang_muffle_init()
                axr_companions.actors_command(
                    "characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComClose_AIC", 1.0,
                    3300, true, false, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComNear_AIC",
                    1.0, 3300, false, true, false, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComMid_AIC",
                    1.0, 3300, false, false, true, false, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComFar_AIC",
                    1.0, 3300, false, false, false, true, false)
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle ..
                                   "StayFar_ComTooFar_AIC", 1.0, 3300, false, false, false, false, true)
            end
        end -- filters disabled companion commands shouts from MCM
    end

    function axr_companions.switch_companion_distance(npc) -- EDITED FUNCTION (SWITCHING STAY CLOSE/FAR COMMAND)
        if (npc:has_info("npcx_beh_distance_far")) then
            npc:disable_info_portion("npcx_beh_distance_far")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command(
                    "characters_voice\\commands" .. lang .. "\\StayClose\\" .. muffle .. "StayClose_ComClose", 1.0,
                    3000, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        else
            npc:give_info_portion("npcx_beh_distance_far")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\StayFar\\" .. muffle .. "StayFar_ComClose",
                    1.0, 3300, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        end
    end

    function axr_companions.switch_companion_patrol_mode(npc) -- EDITED FUNCTION (SWITCHING START/STOP PATROLLING COMMAND)
        if (npc:has_info("npcx_beh_patrol_mode")) then
            npc:disable_info_portion("npcx_beh_patrol_mode")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Patrol\\" .. muffle .. "StopPatrolling", 1.0,
                    1700, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        else
            npc:give_info_portion("npcx_beh_patrol_mode")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Patrol\\" .. muffle .. "StartPatrolling", 1.0,
                    1700, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        end
    end

    function axr_companions.switch_companion_gather_items(npc) -- EDITED FUNCTION (SWITCHING LOOT/DONT LOOT ITEMS COMMAND)
        if (npc:has_info("npcx_beh_gather_items")) then
            actor_menu.set_msg(1, game.translate_string("st_disable_looting"), 8)
            npc:disable_info_portion("npcx_beh_gather_items")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\DontLoot\\" .. muffle .. "DontLoot_ComClose",
                    1.0, 3000, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        else
            actor_menu.set_msg(1, game.translate_string("st_enable_looting"), 8)
            npc:give_info_portion("npcx_beh_gather_items")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComClose", 1.0,
                    2200, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        end
    end

    function axr_companions.switch_companion_loot_corpses(npc) -- EDITED FUNCTION (SWITCHING LOOT/DONT LOOT BODYS COMMAND)
        if (npc:has_info("npcx_beh_loot_corpses")) then
            npc:disable_info_portion("npcx_beh_loot_corpses")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\DontLoot\\" .. muffle .. "DontLoot_ComClose",
                    1.0, 3000, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        else
            npc:give_info_portion("npcx_beh_loot_corpses")
            if get_config("enable_companions_commands_shouts") then
                AGDD_voiced_actor.sound_check()
                lang_muffle_init()
                axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Loot\\" .. muffle .. "Loot_ComNear", 1.0,
                    2200, true, false, false, false, false)
            end -- filters disabled companion commands shouts from MCM
        end
    end

    function axr_companions.companion_remove_waypoints(npc) -- EDITED FUNCTION (PATROL - FORGET ALL WAYPOINTS COMMAND)
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Patrol\\" .. muffle .. "ForgetAllWaypoints", 1.0,
                1700, true, false, false, false, false)
        end -- filters disabled companion commands shouts from MCM
        npc:disable_info_portion("npcx_beh_patrol_mode")
        local i = 1
        local p = se_load_var(npc:id(), npc:name(), "pathpoint" .. i) -- load_var(npc,"pathpoint"..tostring(i))
        while p do
            se_save_var(npc:id(), npc:name(), "pathpoint" .. i, nil) -- save_var(npc,"pathpoint"..tostring(i),nil)
            i = i + 1
            p = se_load_var(npc:id(), npc:name(), "pathpoint" .. i) -- load_var(npc,"pathpoint"..tostring(i))
        end
    end

    function axr_companions.companion_add_waypoints(npc, pos) -- EDITED FUNCTION (PATROL - ADD THIS SPOT COMMAND)
        if get_config("enable_companions_commands_shouts") then
            AGDD_voiced_actor.sound_check()
            lang_muffle_init()
            axr_companions.actors_command("characters_voice\\commands" .. lang .. "\\Patrol\\" .. muffle .. "AddThisSpot", 1.0, 1700,
                true, false, false, false, false)
        end -- filters disabled companion commands shouts from MCM
        local i = 1
        local p = se_load_var(npc:id(), npc:name(), "pathpoint" .. i) -- load_var(npc,"pathpoint"..tostring(i))
        while p do
            i = i + 1
            p = se_load_var(npc:id(), npc:name(), "pathpoint" .. i) -- load_var(npc,"pathpoint"..tostring(i))
        end
        local pos = db.actor:position()
        local s = "5000,patrol | pos:" .. pos.x .. "," .. pos.y .. "," .. pos.z
        se_save_var(npc:id(), npc:name(), "pathpoint" .. i, s) -- save_var(npc,"pathpoint"..tostring(i),s)
    end

    printf(
        "[VARefined] axr_companions.script monkeypatched by zzz_monkey_axr_companions_varefined.script [Voiced Actor Refined mod]")
elseif axr_companions.axr_companions.actors_command then
    printf(
        "[VARefined] zzz_monkey_axr_companions_varefined.script: axr_companions already supports voiced actor commands, aborting monkeypatch [Voiced Actor Refined mod]")
else
    printf(
        "[VARefined] zzz_monkey_axr_companions_varefined.script: xr_companions not found, aborting monkeypatch [Voiced Actor Refined mod]")
end

